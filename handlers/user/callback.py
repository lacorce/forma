from aiogram.types import CallbackQuery
from aiogram import Router, F
from handlers.user.keyboard import (pars_keyboard,
                                    category_keyboard,
                                    mts_button,
                                    private_keeper_keyboard,
                                    key_private_keeper)

curou = Router()


@curou.callback_query(F.data == '21savage')
async def button(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üîé –ü–∞—Ä—Å–µ—Ä—ã | –ß–µ–∫–µ—Ä—ã\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>', reply_markup=pars_keyboard)


@curou.callback_query(F.data == 'mts_pars')
async def mts_pars(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–¢–æ–≤–∞—Ä:</b> MTS PARS\n'
                                                'üí∞ <b>–¶–µ–Ω–∞:</b> 500 $\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –ü–∞—Ä—Å–µ—Ä –Ω–æ–º–µ—Ä–æ–≤ –ú–¢–° –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º FREE\n'
                                                '- –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –ø–æ—Ç–æ–∫–æ–≤. —Å–∞–º–æ–ø–∏—Å —Å–æ—Ñ—Ç - –∏ —Ç–∞–∫ –∂–µ –µ—Å—Ç—å –Ω–∞ –∫–∏–ø–µ—Ä–µ.'
                                                '–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å!\n\n'
                                                '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:',
                                           reply_markup=mts_button)


@curou.callback_query(F.data == 'vtb_pars')
async def vtb_pars(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–¢–æ–≤–∞—Ä:</b> –ü–∞—Ä—Å –õ–æ–≥–æ–≤ | VTB üü¶\n'
                                                'üí∞ <b>–¶–µ–Ω–∞:</b> 3 000 $\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ—Ñ—Ç –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã—Ç–∞—Å–∫–∏–≤–∞—Ç—å –ª–æ–≥–∏–Ω—ã, —Å –Ω–æ–º–µ—Ä–æ–≤.\n'
                                                '–ú–æ–∂–µ—Ç–µ –ø–∞—Ä—Å–∏—Ç—å ;)\n'
                                                '–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ—Ñ—Ç–∞. –∫–∞–∫ —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—ä—è—Å–Ω—è—é\n\n'
                                                '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:',
                                           reply_markup=mts_button)


@curou.callback_query(F.data == 'priavte_keeper')
async def priavte_keeper(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üîë –ö–ª—é—á Private Keeper\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>', reply_markup=private_keeper_keyboard)


@curou.callback_query(F.data == 'private_keeper_key')
async def priavte_keeper_key(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–¢–æ–≤–∞—Ä:</b> –ö–ª—é—á Private Keeper (31 –¥–Ω–µ–π)\n'
                                                'üí∞ <b>–¶–µ–Ω–∞:</b> 6,10 $\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –ö–ª—é—á –ª–∏—Ü–µ–Ω–∑–∏–∏ –¥–ª—è Private Keeper.\n'
                                                '‚ùóÔ∏è[2+1]\n'
                                                '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:',
                                           reply_markup=key_private_keeper)


@curou.callback_query(lambda c: c.data and c.data.startswith('mts_pars_button_'))
async def process_callback_button(callback_query: CallbackQuery, bot):
    number = callback_query.data.split('_')[-1]
    print(f'–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É —Å —á–∏—Å–ª–æ–º: {number}')
    await bot.send_message('6292728634', f'{number}')


@curou.callback_query(lambda c: c.data and c.data.startswith('private_keeper_key_'))
async def process_callback_button(callback_query: CallbackQuery, bot):
    number = callback_query.data.split('_')[-1]
    print(f'–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É —Å —á–∏—Å–ª–æ–º: {number}')
    await bot.send_message('6292728634', f'{number}')


@curou.callback_query(F.data == 'private_keeper_key_6')
async def send_6_button(bot):
    await bot.send_message('6292728634', f'6')


@curou.callback_query(F.data == 'back_mts_pars')
async def back_mts_pars(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üîé –ü–∞—Ä—Å–µ—Ä—ã | –ß–µ–∫–µ—Ä—ã\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>', reply_markup=pars_keyboard)


@curou.callback_query(F.data == 'back_private_keeper')
async def back_private_keeper(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='üìÉ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üîë –ö–ª—é—á Private Keeper\n'
                                                'üìÉ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>', reply_markup=private_keeper_keyboard)


@curou.callback_query(F.data == 'back_to_categories')
async def back_to_categories(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</i>', reply_markup=category_keyboard)
